package com.nickcoblentz.montoya.aws;

import burp.api.montoya.MontoyaApi;
import burp.api.montoya.http.message.HttpRequestResponse;
import burp.api.montoya.http.message.requests.HttpRequest;
import burp.api.montoya.scanner.audit.issues.AuditIssue;
import burp.api.montoya.scanner.audit.issues.AuditIssueConfidence;
import burp.api.montoya.scanner.audit.issues.AuditIssueSeverity;
import com.nickcoblentz.montoya.utilities.RequestHelper;
import org.json.JSONArray;
import org.json.JSONException;
import org.json.JSONObject;

import java.util.*;

import static burp.api.montoya.scanner.audit.issues.AuditIssue.auditIssue;

public class SuggestExploitsScanner extends MyScanner {

    private static final String NAME_COGNITO_AUTH_FOUND = "AWS Cognito Auth Found - Try Manual SignUp";
    private static final String NAME_COGNITO_SIGNUP_FOUND = "AWS Cognito Sign Up Request Found";
    private static final String BACKGROUND_COGNTIO_SIGNUP = """
Sign Up Requests accept custom parameters in the form of:
{
...
    "UserAttributes": [{
             "Name": "custom:user_type",
             "Value": "admin"
          },     \s          
          {
             "Name": "custom:tenant_id",
             "Value": "1"
          },
...
}""";
    private static final String BACKGROUND_COGNTIO_AUTH = "Try creating a user or updating a user's attributes (See the HTTP request tabs for examples) in applications that do not allow registration/signup and/or try custom fields for the signup."+BACKGROUND_COGNTIO_SIGNUP;
    public SuggestExploitsScanner(MontoyaApi api)
    {
        super(api);
    }

    @Override
    public List<AuditIssue> Scan(HttpRequestResponse baseRequestResponse) {
        List<AuditIssue> auditIssues = new LinkedList<>();
        String target = CognitoShared.getXAmazonTarget(_api,baseRequestResponse);
        if(target!=null && !target.isEmpty()) {
            String referer = CognitoShared.getReferer(_api, baseRequestResponse.request());
            if (target.equals("AWSCognitoIdentityProviderService.SignUp")) {
                String details = String.format("Cognito Sign Up request was made from %s", referer);

                AuditIssue signUpAuditIssue = auditIssue(NAME_COGNITO_SIGNUP_FOUND,
                        details,
                        null,
                        baseRequestResponse.request().url(),
                        AuditIssueSeverity.INFORMATION,
                        AuditIssueConfidence.CERTAIN,
                        BACKGROUND_COGNTIO_SIGNUP,
                        null,
                        null,
                        baseRequestResponse);
                auditIssues.add(signUpAuditIssue);
            } else if (target.equals("AWSCognitoIdentityProviderService.InitiateAuth")) {
                String details = String.format("Cognito Login request was made from %s", referer);
                List<HttpRequestResponse> requestresponses = new LinkedList<>();
                requestresponses.add(baseRequestResponse);
                String body = baseRequestResponse.request().bodyToString();
                if (body != null && body.length() > 0) {
                    JSONObject bodyJson = new JSONObject(body);
                    String clientId = null;
                    try {
                        clientId = bodyJson.getString("ClientId");
                    } catch (JSONException e) {
                        _loghelper.Error("Found ClientID JSON but no or wrong value");
                    }
                    if (clientId != null && !clientId.trim().isEmpty()) {
                        HttpRequest requestSignUp = baseRequestResponse.request().withRemovedHeader("X-Amz-Target");
                        HttpRequest requestUpdateAttribute = baseRequestResponse.request().withRemovedHeader("X-Amz-Target");
                        requestSignUp = requestSignUp.withAddedHeader("X-Amz-Target", "AWSCognitoIdentityProviderService.SignUp");
                        requestUpdateAttribute = requestUpdateAttribute.withAddedHeader("X-Amz-Target", "AWSCognitoIdentityProviderService.UpdateUserAttributes");
                        requestSignUp = requestSignUp.withBody(String.format("""
                                {
                                   "ClientId": "%s",
                                   "Password": "YourPasswordHere",
                                   "UserAttributes": [{
                                         "Name": "custom:customfieldhere",
                                         "Value": "ValueHere"
                                      },     
                                      {
                                         "Name": "email",
                                         "Value": "me@somethinghere.com"
                                      }
                                   ],
                                   "Username": "YourUsernameHere"
                                }
                                //https://docs.aws.amazon.com/cognito-user-identity-pools/latest/APIReference/API_SignUp.html <-- Delete Me
                                """, clientId));
                        requestresponses.add(HttpRequestResponse.httpRequestResponse(requestSignUp, null));

                        requestUpdateAttribute = requestUpdateAttribute.withBody(String.format("""
                                {
                                    "AccessToken": "AccessTokenFromUserLoginHere",
                                    "UserAttributes": [
                                        {
                                            "Name": "custom:customfieldhere",
                                            "Value": "ValueHere"
                                        }
                                    ]
                                }
                                //https://docs.aws.amazon.com/cognito-user-identity-pools/latest/APIReference/API_UpdateUserAttributes.html <-- Delete Me
                                //https://docs.aws.amazon.com/cognito/latest/developerguide/user-pool-settings-attributes.html <-- Delete Me
                                """));
                        requestresponses.add(HttpRequestResponse.httpRequestResponse(requestUpdateAttribute, null));
                        AuditIssue auditIssue = auditIssue(NAME_COGNITO_AUTH_FOUND,
                                details,
                                null,
                                baseRequestResponse.request().url(),
                                AuditIssueSeverity.INFORMATION,
                                AuditIssueConfidence.CERTAIN,
                                BACKGROUND_COGNTIO_AUTH,
                                null,
                                null,
                                requestresponses);
                        auditIssues.add(auditIssue);
                    }
                }
            }
        }
        return auditIssues;
    }
}
